apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: false
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: nextcloud
  sources:
    - repoURL: https://github.com/kubelize/kube-projects
      targetRevision: dev
      path: base/stable/nextcloud/deploy
    - repoURL: https://nextcloud.github.io/helm/
      targetRevision: 6.6.2
      chart: nextcloud
      helm:
        parameters: []
        valuesObject:
          image:
            flavour: 
            repository: kubelize/nextcloud
            tag: 0.1.2
          phpClientHttpsFix:
            enabled: true
            protocol: https
          ingress:
            enabled: true
            className: nginx
            annotations:
              nginx.ingress.kubernetes.io/proxy-body-size: 4G
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
              nginx.ingress.kubernetes.io/server-snippet: |-
                server_tokens off;
                proxy_hide_header X-Powered-By;
                rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
                rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
                rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
                rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
                location = /.well-known/carddav {
                  return 301 $scheme://$host/remote.php/dav;
                }
                location = /.well-known/caldav {
                  return 301 $scheme://$host/remote.php/dav;
                }
                location = /robots.txt {
                  allow all;
                  log_not_found off;
                  access_log off;
                }
                location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
                  deny all;
                }
                location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
                  deny all;
                }
            tls:
              - secretName: nextcloud-tls
                hosts:
                  - nextcloud.kube.home
          nginx:
            enabled: true
            image:
              repository: nginxinc/nginx-unprivileged
              tag: alpine3.20
            containerPort: 8080
            securityContext:
              runAsUser: 82
              runAsGroup: 33
              runAsNonRoot: true
              readOnlyRootFilesystem: false
          nextcloud:
            configs:
              custom.config.php: |
                <?php
                  $CONFIG = array(
                    "check_data_directory_permissions"=> false,
                    "trusted_domains" => array (
                      $_ENV["NEXTCLOUD_TRUSTED_DOMAINS"],
                    ),
                  );
            phpConfigs:
              zz-php_upload_size.ini: |
                upload_max_filesize=10G
            username: admin
            password: initial-access-1234!
            containerPort: 8080
            securityContext:
              runAsUser: 82
              runAsGroup: 33
              runAsNonRoot: true
              readOnlyRootFilesystem: false
            podSecurityContext:
              fsGroup: 33
            extraVolumes:
              - name: before-starting-scripts
                configMap:
                  name: before-starting-scripts
                  defaultMode: 0550
              - name: nginx-cache
                emptyDir: {}
            extraVolumeMounts:
              - name: before-starting-scripts
                mountPath: /docker-entrypoint-hooks.d/before-starting/install-apps.sh
                subPath: install-apps.sh
              - name: nginx-cache
                mountPath: "/var/cache/nginx"
          internalDatabase:
            enabled: false
          externalDatabase:
            enabled: true
            type: mysql
            database: nextcloud
            existingSecret:
              enabled: true
              secretName: "nextcloud-mariadb-auth"
              usernameKey: mariadb-username
              passwordKey: mariadb-password
          # https://github.com/bitnami/charts/tree/main/bitnami/mariadb
          mariadb:
            enabled: true
            image: 
              tag: 11.3.2-debian-12-r5
            auth:
              existingSecret: "nextcloud-mariadb-auth"
            primary:
              resourcesPreset: "small"
              persistence:
                enabled: true
          # https://github.com/bitnami/charts/tree/main/bitnami/redis
          redis:
            enabled: true
            image: 
              tag: 7.2.5-debian-12-r4
            auth:
              enabled: true
              existingSecret: "nextcloud-redis-auth"
              existingSecretPasswordKey: "redis-password"
            master:
              resourcesPreset: "micro"
              persistence:
                enabled: true
                size: 1Gi
            replica:
              resourcesPreset: "micro"
              persistence:
                enabled: true
                size: 1Gi
          persisitence:
            enabled: false
