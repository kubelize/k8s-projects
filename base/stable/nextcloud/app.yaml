apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: false
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: nextcloud
  source:
    repoURL: https://nextcloud.github.io/helm/
    targetRevision: 6.6.2
    chart: nextcloud
    helm:
      parameters: []
      valuesObject:
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 4G
            kubernetes.io/tls-acme: "true"
            cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
            nginx.ingress.kubernetes.io/server-snippet: |-
              server_tokens off;
              proxy_hide_header X-Powered-By;
              rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
              rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
              rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
              rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
              location = /.well-known/carddav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /.well-known/caldav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
              }
              location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
                deny all;
              }
              location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
                deny all;
              }
          tls:
            - secretName: nextcloud-tls
              hosts:
                - nextcloud.kube.home
        nextcloud:
          username: admin
          password: initial-access-1234!
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            fsGroup: 33 
          # extraVolumes:
          #   - name: php-config
          #     emptyDir: {}
          # extraMounts:
          #   - name: php-config
          #     mountPath: /usr/local/etc/php/conf.d
          # extraInitContainers:
          #   - name: init-permissions
          #     image: busybox
          #     command: ["sh", "-c", "mkdir -p /usr/local/etc/php/conf.d && chown -R 33:33 /usr/local/etc/php/conf.d && echo 'Permission 33:33 set for redis-session.ini' && chmod 777 /usr/local/etc/php/conf.d"]
          #     volumeMounts:
          #     - name: php-config
          #       mountPath: /usr/local/etc/php/conf.d
        externalDatabase:
          enabled: true
          type: mysql
          database: nextcloud
          existingSecret:
            enabled: true
            secretName: "nextcloud-mariadb-auth"
            usernameKey: mariadb-username
            passwordKey: mariadb-password
        mariadb:
          enabled: true
          auth:
            existingSecret: "nextcloud-mariadb-auth"
          primary:
            persistence:
              enabled: true
        redis:
          enabled: true
          auth:
            enabled: true
            existingSecret: "nextcloud-redis-auth"
            existingSecretPasswordKey: "redis-password"
        persisitence:
          enabled: true

