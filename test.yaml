apiVersion: v1
kind: Pod
metadata:
  name: nextcloud-6dcdd9c9c4-49zqs
  namespace: nextcloud
spec:
  containers:
  - env:
    - name: SQLITE_DATABASE
      value: nextcloud
    - name: NEXTCLOUD_ADMIN_USER
      valueFrom:
        secretKeyRef:
          key: nextcloud-username
          name: nextcloud
    - name: NEXTCLOUD_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          key: nextcloud-password
          name: nextcloud
    - name: NEXTCLOUD_TRUSTED_DOMAINS
      value: drive.kubelize.com
    - name: NEXTCLOUD_DATA_DIR
      value: /var/www/html/data
    - name: REDIS_HOST
      value: nextcloud-redis-master
    - name: REDIS_HOST_PORT
      value: "6379"
    - name: REDIS_HOST_PASSWORD
      valueFrom:
        secretKeyRef:
          key: redis-password
          name: nextcloud-redis-auth
    image: nextcloud:30.0.4-fpm-alpine
    command: ["/bin/sleep", "infinity"]
    imagePullPolicy: IfNotPresent
    name: nextcloud
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/www/
      name: nextcloud-main
      subPath: root
    - mountPath: /var/www/html
      name: nextcloud-main
      subPath: html
    - mountPath: /var/www/html/data
      name: nextcloud-main
      subPath: data
    - mountPath: /var/www/html/config
      name: nextcloud-main
      subPath: config
    - mountPath: /var/www/html/custom_apps
      name: nextcloud-main
      subPath: custom_apps
    - mountPath: /var/www/tmp
      name: nextcloud-main
      subPath: tmp
    - mountPath: /var/www/html/themes
      name: nextcloud-main
      subPath: themes
    - mountPath: /docker-entrypoint-hooks.d/before-starting/install-apps.sh
      name: before-starting-scripts
      subPath: install-apps.sh
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-fh6lx
      readOnly: true
  - image: nginxinc/nginx-unprivileged:alpine3.20
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        httpHeaders:
        - name: Host
          value: drive.kubelize.com
        path: /status.php
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: nextcloud-nginx
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        httpHeaders:
        - name: Host
          value: drive.kubelize.com
        path: /status.php
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources: {}
    securityContext:
      readOnlyRootFilesystem: false
      runAsGroup: 33
      runAsNonRoot: true
      runAsUser: 82
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/www/
      name: nextcloud-main
      subPath: root
    - mountPath: /var/www/html
      name: nextcloud-main
      subPath: html
    - mountPath: /var/www/html/data
      name: nextcloud-main
      subPath: data
    - mountPath: /var/www/html/config
      name: nextcloud-main
      subPath: config
    - mountPath: /var/www/html/custom_apps
      name: nextcloud-main
      subPath: custom_apps
    - mountPath: /var/www/tmp
      name: nextcloud-main
      subPath: tmp
    - mountPath: /var/www/html/themes
      name: nextcloud-main
      subPath: themes
    - mountPath: /etc/nginx/conf.d/
      name: nextcloud-nginx-config
    - mountPath: /docker-entrypoint-hooks.d/before-starting/install-apps.sh
      name: before-starting-scripts
      subPath: install-apps.sh
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-fh6lx
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - until mysql --host=nextcloud-mariadb --user=${MYSQL_USER} --password=${MYSQL_PASSWORD}
      --execute="SELECT 1;"; do echo waiting for mysql; sleep 2; done;
    env:
    - name: MYSQL_USER
      valueFrom:
        secretKeyRef:
          key: mariadb-username
          name: nextcloud-mariadb-auth
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          key: mariadb-password
          name: nextcloud-mariadb-auth
    image: docker.io/bitnami/mariadb:11.3.2-debian-12-r5
    imagePullPolicy: IfNotPresent
    name: mariadb-isalive
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-fh6lx
      readOnly: true
  nodeName: talos-4eo-l1n
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 33
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: nextcloud-main
    persistentVolumeClaim:
      claimName: nextcloud-nextcloud
  - configMap:
      defaultMode: 420
      name: nextcloud-nginxconfig
    name: nextcloud-nginx-config
  - configMap:
      defaultMode: 360
      name: before-starting-scripts
    name: before-starting-scripts
  - name: kube-api-access-fh6lx
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-07T19:11:31Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-07T19:11:31Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-07T19:12:17Z"
    message: 'containers with unready status: [nextcloud]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-07T19:12:17Z"
    message: 'containers with unready status: [nextcloud]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-07T19:11:10Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://6da4ed9d247d42cfe163b9125528964fd9f3d28f0ff05291c78ceef4e3fc3721
    image: docker.io/library/nextcloud:30.0.4-fpm-alpine
    imageID: docker.io/library/nextcloud@sha256:4f36442c7bca4b76c13be327bf986597b6234e0aefa5cf72d332fb58ee71ae77
    lastState:
      terminated:
        containerID: containerd://6da4ed9d247d42cfe163b9125528964fd9f3d28f0ff05291c78ceef4e3fc3721
        exitCode: 1
        finishedAt: "2025-01-07T19:14:36Z"
        reason: Error
        startedAt: "2025-01-07T19:14:35Z"
    name: nextcloud
    ready: false
    restartCount: 5
    started: false
    state:
      waiting:
        message: back-off 2m40s restarting failed container=nextcloud pod=nextcloud-6dcdd9c9c4-49zqs_nextcloud(6e131d07-e943-4f83-9c18-0f4a20d44e94)
        reason: CrashLoopBackOff
  - containerID: containerd://cd3598d1495bce6fd36024f8eac8872c4aff83531b2c6c3681a80044c6c0e2ba
    image: docker.io/nginxinc/nginx-unprivileged:alpine3.20
    imageID: docker.io/nginxinc/nginx-unprivileged@sha256:d532ff0a77e1160527e84fc95f2dfa60b01b90241e9a78eb0300999fd299ce7d
    lastState: {}
    name: nextcloud-nginx
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-07T19:11:32Z"
  hostIP: 10.130.5.105
  hostIPs:
  - ip: 10.130.5.105
  initContainerStatuses:
  - containerID: containerd://47e7920165cad5ab7d6cb241950a0dcc27425fbe12c022c95034e6b47d70d12e
    image: docker.io/bitnami/mariadb:11.3.2-debian-12-r5
    imageID: docker.io/bitnami/mariadb@sha256:bcbbb3656a1ea30a9c7c80bacdb80e4e495eddeca5c0d85d30c5f0d01b5ea926
    lastState: {}
    name: mariadb-isalive
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: containerd://47e7920165cad5ab7d6cb241950a0dcc27425fbe12c022c95034e6b47d70d12e
        exitCode: 0
        finishedAt: "2025-01-07T19:11:30Z"
        reason: Completed
        startedAt: "2025-01-07T19:11:30Z"
  phase: Running
  podIP: 10.244.2.71
  podIPs:
  - ip: 10.244.2.71
  qosClass: BestEffort
  startTime: "2025-01-07T19:11:10Z"
